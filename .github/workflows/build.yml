name: Multi-Platform Build with libarib25 and recdvb

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  BUILD_TYPE: Release
  WORKDIR: ${{ github.workspace }}

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Install dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake g++ gcc make build-essential autoconf automake libpcsclite-dev pcscd pcsc-tools libccid pkg-config

      - name: Install dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install cmake gcc make autoconf automake pkg-config pcsc-lite

      - name: Build libarib25 (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          git submodule init && git submodule update
          cd lib/libaribb25
          cmake -B build && cd build
          make && sudo make install
          mkdir -p $WORKDIR/bin_ubuntu/libaribb25
          cp arib-b1-stream-test arib-b25-stream-test b1 b25 $WORKDIR/bin_ubuntu/libaribb25/
          echo "done!"

      - name: Build recdvb (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          cd lib/recdvb
          git submodule init && git submodule update
          ./autogen.sh
          ./configure --enable-b25
          make && sudo make install
          mkdir -p $WORKDIR/bin_ubuntu/recdvb
          cp recdvb recpt1ctl chkdvbsignal tssplitter_lite $WORKDIR/bin_ubuntu/recdvb
          echo "done!"

      - name: Build libarib25 (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          cd lib/libaribb25
          cmake -B build && cd build
          make
          mkdir -p $WORKDIR/bin_macOS/libaribb25
          cp arib-b1-stream-test arib-b25-stream-test b1 b25 $WORKDIR/bin_macOS/libaribb25/
          echo "done!"

      - name: Archive libaribb25 (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          tar -czvf libaribb25_ubuntu.tar.gz $WORKDIR/bin_ubuntu/libaribb25/

      - name: Upload libaribb25 Artifact (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v2
        with:
          name: libaribb25_ubuntu
          path: libaribb25_ubuntu.tar.gz

      - name: Archive recdvb (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          tar -czvf recdvb_ubuntu.tar.gz $WORKDIR/bin_ubuntu/recdvb/

      - name: Upload recdvb Artifact (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v2
        with:
          name: recdvb_ubuntu
          path: recdvb_ubuntu.tar.gz

      - name: Archive libaribb25 (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          tar -czvf libaribb25_macos.tar.gz $WORKDIR/bin_macos/libaribb25/

      - name: Upload libaribb25 Artifact (macOS)
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v2
        with:
          name: libaribb25_macos
          path: libaribb25_macos.tar.gz
